name: CI/CD Workflow

on:
  push:
    branches:
      - develop
      - main

  pull_request:
    branches:
      - develop

env:
  APP_NAME: farm-goods-test

jobs:
  # -------------------------------------------------------------------
  # Job 1: develop
  # -------------------------------------------------------------------
  test_and_build_develop:
    runs-on: ubuntu-latest
    # เงื่อนไข: รันเมื่อ push → develop หรือ PR → develop
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/develop') || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'develop') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Run Test
        run: npm test

      - name: Build Docker Image (Develop)
        run: docker build -t ${{ env.APP_NAME }}:develop .

  # -------------------------------------------------------------------
  # Job 2: main
  # -------------------------------------------------------------------
  build_and_release_main:
    runs-on: ubuntu-latest
    # เงื่อนไข: รันเฉพาะเมื่อ push เข้า main (เช่น merge PR)
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # สร้างตัวแปร VERSION = v1.<run_number>
      - name: Set Version
        id: versioning
        run: echo "VERSION=v1.${{ github.run_number }}" >> $GITHUB_OUTPUT

      # Build + Push Docker image ด้วย Tag เดียวกับ VERSION
      - name: Build & Push
        run: |
          IMAGE_TAG="${{ steps.versioning.outputs.VERSION }}"
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${IMAGE_TAG}"

          echo "Docker Image Name: $IMAGE_NAME"

          docker build -t "${IMAGE_NAME}" .
          docker push "${IMAGE_NAME}"

      # สร้าง Release บน GitHub ด้วย Tag เดียวกับ Docker image
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.versioning.outputs.VERSION }}
          release_name: "Release ${{ steps.versioning.outputs.VERSION }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

